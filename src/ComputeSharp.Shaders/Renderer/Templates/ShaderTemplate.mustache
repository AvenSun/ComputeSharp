{{!Captured variables buffer}}
cbuffer __Variables__Buffer : register(b0)
{
    uint __x__;
    uint __y__;
    uint __z__;
{{#FieldsList}}
    {{&FieldType}} {{FieldName}};
{{/FieldsList}}
}
{{#BuffersList}}
{{#IsConstantBuffer}}

{{!Constant buffer}}
cbuffer {{FieldName}}Buffer : register(b{{BufferIndex}})
{
    {{&FieldType}} {{FieldName}}[2];
}
{{/IsConstantBuffer}}
{{#IsReadOnlyBuffer}}

{{!Readonly buffer}}
{{&FieldType}} {{FieldName}} : register(t{{BufferIndex}});
{{/IsReadOnlyBuffer}}
{{#IsReadWriteBuffer}}

{{!Read write buffer}}
{{&FieldType}} {{FieldName}} : SV_DispatchThreadId : register(u{{BufferIndex}});
{{/IsReadWriteBuffer}}
{{/BuffersList}}

{{!Shader entry point}}
[Shader("compute")]
[NumThreads({{NumThreadsX}}, {{NumThreadsY}}, {{NumThreadsZ}})]
void CSMain(uint3 {{ThreadsIdsVariableName}} : SV_DispatchThreadId)
{
    if ({{ThreadsIdsVariableName}}.x < __x__ &&
        {{ThreadsIdsVariableName}}.y < __y__ &&
        {{ThreadsIdsVariableName}}.z < __z__)
{{&ShaderBody}}
}
